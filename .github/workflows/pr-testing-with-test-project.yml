#This workflow runs the tests in the test projects to make sure the generator works as a library where it is a Node dependency along with the template.
name: Test using test project

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  test:
    if: >
      github.event.pull_request.draft == false &&
      !(
        (github.actor == 'asyncapi-bot' && (
          startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') || 
          startsWith(github.event.pull_request.title, 'chore(release):')
        )) ||
        (github.actor == 'asyncapi-bot-eve' && (
          startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') || 
          startsWith(github.event.pull_request.title, 'chore(release):')
        )) ||
        (github.actor == 'allcontributors[bot]' && 
          startsWith(github.event.pull_request.title, 'docs: add')
        ) ||
        (github.event.pull_request.files.*.path == 'README.md') ||
        (github.event.pull_request.files.*.path == 'docs/**') ||
        (github.event.pull_request.files.*.path == '.github/**') ||
        (github.event.pull_request.files.*.path == 'CONTRIBUTING.md') ||
        (github.event.pull_request.files.*.path == 'Development.md')
      )
    name: Test generator as dependency with Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["18", "20"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run test
        run: NODE_IMAGE_TAG=${{ matrix.node }} docker compose up --abort-on-container-exit --remove-orphans --force-recreate
        working-directory: ./apps/generator/test/test-project
