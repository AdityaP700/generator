name: Test using test project

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - 'package.json'
      - 'package-lock.json'
      - 'apps/**'
      - 'packages/**'
      - '.github/workflows/**'
      - '!**/*.md'
      - '!docs/**'

jobs:
  should-test:
    runs-on: ubuntu-latest
    outputs:
      run_tests: ${{ steps.check.outputs.run_tests }}
    steps:
      - name: Check if tests should run
        id: check
        run: |
          # Skip for bot PRs with specific titles
          if [[ "${{ github.actor }}" == "asyncapi-bot" && "${{ github.event.pull_request.title }}" =~ ^(ci:\ update|chore\(release\):) ]] || \
             [[ "${{ github.actor }}" == "allcontributors[bot]" && "${{ github.event.pull_request.title }}" =~ ^docs: ]]; then
            echo "run_tests=false" >> $GITHUB_OUTPUT
          else
            echo "run_tests=true" >> $GITHUB_OUTPUT
          fi

  test:
    needs: should-test
    if: needs.should-test.outputs.run_tests == 'true' && github.event.pull_request.draft == false
    name: Test generator as dependency with Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["18", "20"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Run test
        run: NODE_IMAGE_TAG=${{ matrix.node }} docker compose up --abort-on-container-exit --remove-orphans --force-recreate
        working-directory: ./apps/generator/test/test-project
